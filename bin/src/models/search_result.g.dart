// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'search_result.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

SearchResult _$SearchResultFromJson(Map<String, dynamic> json) => SearchResult(
      objectID: json['objectID'] as String,
      name: json['name'] as String,
      shortNameWithoutVariant: json['shortNameWithoutVariant'] as String,
      char: json['char'] as String,
      shortName: json['shortName'] as String,
      emojiGroup: $enumDecode(_$EmojiGroupEnumMap, json['emojiGroup']),
      emojiSubgroup: $enumDecode(_$EmojiSubgroupEnumMap, json['emojiSubgroup']),
      variants:
          (json['variants'] as List<dynamic>).map((e) => e as String).toList(),
      keywords: (json['keywords'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList() ??
          const [],
      modifiable: json['modifiable'] as bool? ?? false,
      image: json['image'] as String?,
    );

Map<String, dynamic> _$SearchResultToJson(SearchResult instance) =>
    <String, dynamic>{
      'name': instance.name,
      'char': instance.char,
      'shortName': instance.shortName,
      'emojiGroup': _$EmojiGroupEnumMap[instance.emojiGroup]!,
      'emojiSubgroup': _$EmojiSubgroupEnumMap[instance.emojiSubgroup]!,
      'modifiable': instance.modifiable,
      'keywords': instance.keywords,
      'objectID': instance.objectID,
      'shortNameWithoutVariant': instance.shortNameWithoutVariant,
      'image': instance.image,
      'variants': instance.variants,
    };

const _$EmojiGroupEnumMap = {
  EmojiGroup.smileysEmotion: 'smileysEmotion',
  EmojiGroup.activities: 'activities',
  EmojiGroup.peopleBody: 'peopleBody',
  EmojiGroup.objects: 'objects',
  EmojiGroup.travelPlaces: 'travelPlaces',
  EmojiGroup.component: 'component',
  EmojiGroup.animalsNature: 'animalsNature',
  EmojiGroup.foodDrink: 'foodDrink',
  EmojiGroup.symbols: 'symbols',
  EmojiGroup.flags: 'flags',
};

const _$EmojiSubgroupEnumMap = {
  EmojiSubgroup.faceSmiling: 'faceSmiling',
  EmojiSubgroup.faceAffection: 'faceAffection',
  EmojiSubgroup.faceSleepy: 'faceSleepy',
  EmojiSubgroup.faceTongue: 'faceTongue',
  EmojiSubgroup.faceNeutralSkeptical: 'faceNeutralSkeptical',
  EmojiSubgroup.faceGlasses: 'faceGlasses',
  EmojiSubgroup.faceHat: 'faceHat',
  EmojiSubgroup.faceConcerned: 'faceConcerned',
  EmojiSubgroup.faceNegative: 'faceNegative',
  EmojiSubgroup.faceUnwell: 'faceUnwell',
  EmojiSubgroup.faceHand: 'faceHand',
  EmojiSubgroup.faceCostume: 'faceCostume',
  EmojiSubgroup.event: 'event',
  EmojiSubgroup.catFace: 'catFace',
  EmojiSubgroup.hands: 'hands',
  EmojiSubgroup.handFingersClosed: 'handFingersClosed',
  EmojiSubgroup.handFingersPartial: 'handFingersPartial',
  EmojiSubgroup.handSingleFinger: 'handSingleFinger',
  EmojiSubgroup.handFingersOpen: 'handFingersOpen',
  EmojiSubgroup.bodyParts: 'bodyParts',
  EmojiSubgroup.handProp: 'handProp',
  EmojiSubgroup.clothing: 'clothing',
  EmojiSubgroup.emotion: 'emotion',
  EmojiSubgroup.family: 'family',
  EmojiSubgroup.personSymbol: 'personSymbol',
  EmojiSubgroup.person: 'person',
  EmojiSubgroup.personRole: 'personRole',
  EmojiSubgroup.personFantasy: 'personFantasy',
  EmojiSubgroup.personGesture: 'personGesture',
  EmojiSubgroup.personActivity: 'personActivity',
  EmojiSubgroup.artsCrafts: 'artsCrafts',
  EmojiSubgroup.office: 'office',
  EmojiSubgroup.hotel: 'hotel',
  EmojiSubgroup.skyWeather: 'skyWeather',
  EmojiSubgroup.hairStyle: 'hairStyle',
  EmojiSubgroup.animalMammal: 'animalMammal',
  EmojiSubgroup.animalAmphibian: 'animalAmphibian',
  EmojiSubgroup.monkeyFace: 'monkeyFace',
  EmojiSubgroup.animalBird: 'animalBird',
  EmojiSubgroup.animalBug: 'animalBug',
  EmojiSubgroup.animalReptile: 'animalReptile',
  EmojiSubgroup.animalMarine: 'animalMarine',
  EmojiSubgroup.foodMarine: 'foodMarine',
  EmojiSubgroup.plantOther: 'plantOther',
  EmojiSubgroup.foodVegetable: 'foodVegetable',
  EmojiSubgroup.placeBuilding: 'placeBuilding',
  EmojiSubgroup.plantFlower: 'plantFlower',
  EmojiSubgroup.placeMap: 'placeMap',
  EmojiSubgroup.foodFruit: 'foodFruit',
  EmojiSubgroup.foodAsian: 'foodAsian',
  EmojiSubgroup.foodPrepared: 'foodPrepared',
  EmojiSubgroup.foodSweet: 'foodSweet',
  EmojiSubgroup.drink: 'drink',
  EmojiSubgroup.dishware: 'dishware',
  EmojiSubgroup.sport: 'sport',
  EmojiSubgroup.tool: 'tool',
  EmojiSubgroup.game: 'game',
  EmojiSubgroup.transportGround: 'transportGround',
  EmojiSubgroup.personSport: 'personSport',
  EmojiSubgroup.transportAir: 'transportAir',
  EmojiSubgroup.personResting: 'personResting',
  EmojiSubgroup.awardMedal: 'awardMedal',
  EmojiSubgroup.placeOther: 'placeOther',
  EmojiSubgroup.lightVideo: 'lightVideo',
  EmojiSubgroup.music: 'music',
  EmojiSubgroup.musicalInstrument: 'musicalInstrument',
  EmojiSubgroup.transportWater: 'transportWater',
  EmojiSubgroup.otherObject: 'otherObject',
  EmojiSubgroup.placeGeographic: 'placeGeographic',
  EmojiSubgroup.placeReligious: 'placeReligious',
  EmojiSubgroup.time: 'time',
  EmojiSubgroup.phone: 'phone',
  EmojiSubgroup.computer: 'computer',
  EmojiSubgroup.science: 'science',
  EmojiSubgroup.household: 'household',
  EmojiSubgroup.money: 'money',
  EmojiSubgroup.medical: 'medical',
  EmojiSubgroup.transportSign: 'transportSign',
  EmojiSubgroup.lock: 'lock',
  EmojiSubgroup.mail: 'mail',
  EmojiSubgroup.bookPaper: 'bookPaper',
  EmojiSubgroup.sound: 'sound',
  EmojiSubgroup.writing: 'writing',
  EmojiSubgroup.religion: 'religion',
  EmojiSubgroup.zodiac: 'zodiac',
  EmojiSubgroup.alphanum: 'alphanum',
  EmojiSubgroup.warning: 'warning',
  EmojiSubgroup.avSymbol: 'avSymbol',
  EmojiSubgroup.otherSymbol: 'otherSymbol',
  EmojiSubgroup.punctuation: 'punctuation',
  EmojiSubgroup.geometric: 'geometric',
  EmojiSubgroup.keycap: 'keycap',
  EmojiSubgroup.arrow: 'arrow',
  EmojiSubgroup.math: 'math',
  EmojiSubgroup.currency: 'currency',
  EmojiSubgroup.gender: 'gender',
  EmojiSubgroup.flag: 'flag',
  EmojiSubgroup.countryFlag: 'countryFlag',
  EmojiSubgroup.subdivisionFlag: 'subdivisionFlag',
  EmojiSubgroup.skinTone: 'skinTone',
  EmojiSubgroup.regional: 'regional',
};
